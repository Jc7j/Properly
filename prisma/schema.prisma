// src/prisma/schema.ts

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ManagementGroup {
  id              String          @id @unique
  name            String          @unique
  slug            String          @unique
  stripe        Json?        
  ownerId       String          @unique
  createdAt     DateTime?       @default(now())
  updatedAt     DateTime?       @updatedAt
}

model User {
  id              String          @id @unique
  email           String          @unique
  stripe            Json?
  groups            Json?
  createdAt      DateTime?       @default(now())
  updatedAt      DateTime?       @updatedAt
}

model Property {
  id              String          @id @default(uuid())
  managementGroupId  String
  name            String
  locationInfo   Json?
  owner           Json?           // Stores owner details as a JSON object: { name, email, phone, address }
  createdAt      DateTime?       @default(now())
  updatedAt      DateTime?       @updatedAt
  createdBy     String
  updatedBy     String
  deletedAt      DateTime?
  // One-to-many relation: One Property can have many Invoices
  invoices      Invoice[]
}

model Invoice {
  id              String          @id @default(uuid())
  managementGroupId String
  invoiceDate    DateTime
  propertyId     String?
  property       Property?       @relation(fields: [propertyId], references: [id])
  financialDetails Json?         // Stores total_amount, subtotal, tax as a JSON object
  createdAt      DateTime?       @default(now())
  updatedAt      DateTime?       @updatedAt
  createdBy   String
  updatedBy   String
  deletedAt      DateTime?
  items      InvoiceItem[]
}

model ManagementGroupItems {
  id              String          @id @default(uuid())
  managementGroupId String
  name            String
  defaultPrice   Decimal
  quantityOnHand Int           @default(0)
  quantityUsed    Int           @default(0)
  quantityTotal   Int           @default(0)
  description     String?
  link            String?
  createdAt      DateTime?       @default(now())
  updatedAt      DateTime?       @updatedAt
  createdBy   String
  updatedBy   String
  deletedAt      DateTime?
  // One-to-many relation: One ManagementGroupItems can have many InvoiceItems
  // This allows Prisma to automatically include related items using include() in queries
  // Example: await prisma.invoiceItem.findUnique({ include: { managementGroupItem: true } })
  invoiceItems   InvoiceItem[]
}

model InvoiceItem {
  id              String          @id @default(uuid())
  invoiceId      String
  quantity        Int             @default(0)
  price           Decimal
  managementGroupItemsId String?
  // Many-to-one relation with Invoice
  invoice     Invoice     @relation(fields: [invoiceId], references: [id])
  // Many-to-one relation with ManagementGroupItems
  managementGroupItem ManagementGroupItems? @relation(fields: [managementGroupItemsId], references: [id])
  customItemName String?
  date            DateTime?       @default(now())
  createdAt      DateTime       @default(now())
  createdBy      String
}
